{"ast":null,"code":"var _jsxFileName = \"/Users/eunhye/Desktop/TanStack Query/base-blog-em/src/Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { PostDetail } from \"./PostDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst maxPostPage = 10;\nasync function fetchPosts() {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/posts?_limit=10&_page=0\");\n  return response.json();\n}\nexport function Posts() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // replace with useQuery\n  const {\n    data,\n    isError,\n    error,\n    isLoading\n  } = useQuery([[\"posts\"], currentPage], () => fetchPosts(currentPage), {\n    staleTime: 2000,\n    keepPreviousData: true\n  });\n  if (isError) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Oops, something went wrong\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post-title\",\n        onClick: () => setSelectedPost(post),\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        onClick: () => {},\n        children: \"Previous page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        onClick: () => {},\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(PostDetail, {\n      post: selectedPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n_s(Posts, \"CNSKGzSUYMAO1/3nN3s7mTSLwVc=\", false, function () {\n  return [useQuery];\n});\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useQuery","useState","PostDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","maxPostPage","fetchPosts","response","fetch","json","Posts","_s","currentPage","setCurrentPage","selectedPost","setSelectedPost","data","isError","error","isLoading","staleTime","keepPreviousData","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","className","onClick","title","id","disabled","_c","$RefreshReg$"],"sources":["/Users/eunhye/Desktop/TanStack Query/base-blog-em/src/Posts.jsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\n\nimport { PostDetail } from \"./PostDetail\";\nconst maxPostPage = 10;\n\nasync function fetchPosts() {\n  const response = await fetch(\n    \"https://jsonplaceholder.typicode.com/posts?_limit=10&_page=0\"\n  );\n  return response.json();\n}\n\nexport function Posts() {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // replace with useQuery\n  const { data, isError, error, isLoading } = useQuery(\n    [[\"posts\"], currentPage],\n    () => fetchPosts(currentPage),\n    {\n      staleTime: 2000,\n      keepPreviousData: true,\n    }\n  );\n  if (isError)\n    return (\n      <>\n        <h3>Oops, something went wrong</h3>\n      </>\n    );\n\n  if (isLoading) return <h3>Loading...</h3>;\n  return (\n    <>\n      <ul>\n        {data.map((post) => (\n          <li\n            key={post.id}\n            className=\"post-title\"\n            onClick={() => setSelectedPost(post)}\n          >\n            {post.title}\n          </li>\n        ))}\n      </ul>\n      <div className=\"pages\">\n        <button disabled onClick={() => {}}>\n          Previous page\n        </button>\n        <span>Page {currentPage + 1}</span>\n        <button disabled onClick={() => {}}>\n          Next page\n        </button>\n      </div>\n      <hr />\n      {selectedPost && <PostDetail post={selectedPost} />}\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,MAAMC,WAAW,GAAG,EAAE;AAEtB,eAAeC,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,8DAA8D,CAC/D;EACD,OAAOD,QAAQ,CAACE,IAAI,EAAE;AACxB;AAEA,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA,MAAM;IAAEiB,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGrB,QAAQ,CAClD,CAAC,CAAC,OAAO,CAAC,EAAEc,WAAW,CAAC,EACxB,MAAMN,UAAU,CAACM,WAAW,CAAC,EAC7B;IACEQ,SAAS,EAAE,IAAI;IACfC,gBAAgB,EAAE;EACpB,CAAC,CACF;EACD,IAAIJ,OAAO,EACT,oBACEf,OAAA,CAAAE,SAAA;IAAAkB,QAAA,eACEpB,OAAA;MAAAoB,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBAClC;EAGP,IAAIP,SAAS,EAAE,oBAAOjB,OAAA;IAAAoB,QAAA,EAAI;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EACzC,oBACExB,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EACGN,IAAI,CAACW,GAAG,CAAEC,IAAI,iBACb1B,OAAA;QAEE2B,SAAS,EAAC,YAAY;QACtBC,OAAO,EAAEA,CAAA,KAAMf,eAAe,CAACa,IAAI,CAAE;QAAAN,QAAA,EAEpCM,IAAI,CAACG;MAAK,GAJNH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACLxB,OAAA;MAAK2B,SAAS,EAAC,OAAO;MAAAP,QAAA,gBACpBpB,OAAA;QAAQ+B,QAAQ;QAACH,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;QAAAR,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTxB,OAAA;QAAAoB,QAAA,GAAM,OAAK,EAACV,WAAW,GAAG,CAAC;MAAA;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnCxB,OAAA;QAAQ+B,QAAQ;QAACH,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;QAAAR,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACLZ,YAAY,iBAAIZ,OAAA,CAACF,UAAU;MAAC4B,IAAI,EAAEd;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAClD;AAEP;AAACf,EAAA,CA/CeD,KAAK;EAAA,QAKyBZ,QAAQ;AAAA;AAAAoC,EAAA,GALtCxB,KAAK;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}