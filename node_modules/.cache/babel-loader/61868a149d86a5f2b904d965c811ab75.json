{"ast":null,"code":"var _jsxFileName = \"/Users/eunhye/Desktop/TanStack Query/base-blog-em/src/Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\nimport { PostDetail } from \"./PostDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst maxPostPage = 10;\nasync function fetchPosts(pageNum) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/posts?_limit=10&_page=${pageNum}`);\n  return response.json();\n}\nexport function Posts() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // replace with useQuery\n  // const { data, isError, error, isLoading } = useQuery(\n  //   [[\"posts\"], currentPage],\n  //   () => fetchPosts(currentPage),\n  //   {\n  //     staleTime: 2000,\n  //     keepPreviousData: true,\n  //   }\n  // );\n  const {\n    data\n  } = useQuery([[\"posts\"], currentPage]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post-title\",\n        onClick: () => setSelectedPost(post),\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage <= 1,\n        onClick: () => {\n          setCurrentPage(previousValue => previousValue - 1);\n        },\n        children: \"Previous page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: currentPage >= maxPostPage,\n        onClick: () => {\n          setCurrentPage(previousValue => previousValue + 1);\n        },\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(PostDetail, {\n      post: selectedPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n_s(Posts, \"dXxqRD78gGbTPS/5n6f4vfNk+Ek=\", false, function () {\n  return [useQuery];\n});\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useQuery","useState","PostDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","maxPostPage","fetchPosts","pageNum","response","fetch","json","Posts","_s","currentPage","setCurrentPage","selectedPost","setSelectedPost","data","children","map","post","className","onClick","title","id","fileName","_jsxFileName","lineNumber","columnNumber","disabled","previousValue","_c","$RefreshReg$"],"sources":["/Users/eunhye/Desktop/TanStack Query/base-blog-em/src/Posts.jsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport { useState } from \"react\";\n\nimport { PostDetail } from \"./PostDetail\";\nconst maxPostPage = 10;\n\nasync function fetchPosts(pageNum) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/posts?_limit=10&_page=${pageNum}`\n  );\n  return response.json();\n}\n\nexport function Posts() {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // replace with useQuery\n  // const { data, isError, error, isLoading } = useQuery(\n  //   [[\"posts\"], currentPage],\n  //   () => fetchPosts(currentPage),\n  //   {\n  //     staleTime: 2000,\n  //     keepPreviousData: true,\n  //   }\n  // );\n  const { data } = useQuery([[\"posts\"], currentPage]);\n\n  return (\n    <>\n      <ul>\n        {data.map((post) => (\n          <li\n            key={post.id}\n            className=\"post-title\"\n            onClick={() => setSelectedPost(post)}\n          >\n            {post.title}\n          </li>\n        ))}\n      </ul>\n      <div className=\"pages\">\n        <button\n          disabled={currentPage <= 1}\n          onClick={() => {\n            setCurrentPage((previousValue) => previousValue - 1);\n          }}\n        >\n          Previous page\n        </button>\n        <span>Page {currentPage + 1}</span>\n        <button\n          disabled={currentPage >= maxPostPage}\n          onClick={() => {\n            setCurrentPage((previousValue) => previousValue + 1);\n          }}\n        >\n          Next page\n        </button>\n      </div>\n      <hr />\n      {selectedPost && <PostDetail post={selectedPost} />}\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,QAAQ,QAAQ,OAAO;AAEhC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,MAAMC,WAAW,GAAG,EAAE;AAEtB,eAAeC,UAAUA,CAACC,OAAO,EAAE;EACjC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,8DAA6DF,OAAQ,EAAC,CACxE;EACD,OAAOC,QAAQ,CAACE,IAAI,EAAE;AACxB;AAEA,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAM;IAAEkB;EAAK,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,EAAEe,WAAW,CAAC,CAAC;EAEnD,oBACEX,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EACGD,IAAI,CAACE,GAAG,CAAEC,IAAI,iBACblB,OAAA;QAEEmB,SAAS,EAAC,YAAY;QACtBC,OAAO,EAAEA,CAAA,KAAMN,eAAe,CAACI,IAAI,CAAE;QAAAF,QAAA,EAEpCE,IAAI,CAACG;MAAK,GAJNH,IAAI,CAACI,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACL1B,OAAA;MAAKmB,SAAS,EAAC,OAAO;MAAAH,QAAA,gBACpBhB,OAAA;QACE2B,QAAQ,EAAEhB,WAAW,IAAI,CAAE;QAC3BS,OAAO,EAAEA,CAAA,KAAM;UACbR,cAAc,CAAEgB,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;QACtD,CAAE;QAAAZ,QAAA,EACH;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACT1B,OAAA;QAAAgB,QAAA,GAAM,OAAK,EAACL,WAAW,GAAG,CAAC;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnC1B,OAAA;QACE2B,QAAQ,EAAEhB,WAAW,IAAIR,WAAY;QACrCiB,OAAO,EAAEA,CAAA,KAAM;UACbR,cAAc,CAAEgB,aAAa,IAAKA,aAAa,GAAG,CAAC,CAAC;QACtD,CAAE;QAAAZ,QAAA,EACH;MAED;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACN1B,OAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACLb,YAAY,iBAAIb,OAAA,CAACF,UAAU;MAACoB,IAAI,EAAEL;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAClD;AAEP;AAAChB,EAAA,CAnDeD,KAAK;EAAA,QAaFb,QAAQ;AAAA;AAAAiC,EAAA,GAbXpB,KAAK;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}