{"ast":null,"code":"var _jsxFileName = \"/Users/eunhye/Desktop/TanStack Query/base-blog-em/src/PostDetail.jsx\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function fetchComments(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/comments?postId=${postId}`);\n  return response.json();\n}\nasync function deletePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: \"DELETE\"\n  });\n  return response.json();\n}\nasync function updatePost(postId) {\n  const response = await fetch(`https://jsonplaceholder.typicode.com/postId/${postId}`, {\n    method: \"PATCH\",\n    data: {\n      title: \"REACT QUERY FOREVER!!!!\"\n    }\n  });\n  return response.json();\n}\nexport function PostDetail(_ref) {\n  _s();\n  let {\n    post\n  } = _ref;\n  // replace with useQuery\n  const {\n    data,\n    isLoading,\n    isError,\n    error\n  } = useQuery([[\"comment\", post.id], () => fetchComments(post.id)]);\n  const deleteMutation = useMutation(postId => deletePost(postId));\n  const updateMutation = useMutation(postId => updatePost(postId));\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 25\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.toStrong()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        color: \"blue\"\n      },\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Update title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: post.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Comments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), data.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [comment.email, \": \", comment.body]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true);\n}\n_s(PostDetail, \"PMcHZXAHM9eYFJMRUMetWzkkVwQ=\", true, function () {\n  return [useQuery];\n});\n_c = PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["useQuery","jsxDEV","_jsxDEV","Fragment","_Fragment","fetchComments","postId","response","fetch","json","deletePost","method","updatePost","data","title","PostDetail","_ref","_s","post","isLoading","isError","error","id","deleteMutation","useMutation","updateMutation","children","fileName","_jsxFileName","lineNumber","columnNumber","toStrong","style","color","body","map","comment","email","_c","$RefreshReg$"],"sources":["/Users/eunhye/Desktop/TanStack Query/base-blog-em/src/PostDetail.jsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\n\nasync function fetchComments(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/comments?postId=${postId}`\n  );\n  return response.json();\n}\n\nasync function deletePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: \"DELETE\" }\n  );\n  return response.json();\n}\n\nasync function updatePost(postId) {\n  const response = await fetch(\n    `https://jsonplaceholder.typicode.com/postId/${postId}`,\n    { method: \"PATCH\", data: { title: \"REACT QUERY FOREVER!!!!\" } }\n  );\n  return response.json();\n}\n\nexport function PostDetail({ post }) {\n  // replace with useQuery\n  const { data, isLoading, isError, error } = useQuery([\n    [\"comment\", post.id],\n    () => fetchComments(post.id),\n  ]);\n\n  const deleteMutation = useMutation((postId) => deletePost(postId));\n  const updateMutation = useMutation((postId) => updatePost(postId));\n\n  if (isLoading) return <h3>Loading...</h3>;\n  if (isError)\n    return (\n      <>\n        <h3>Error</h3>\n        <p>{error.toStrong()}</p>\n      </>\n    );\n\n  return (\n    <>\n      <h3 style={{ color: \"blue\" }}>{post.title}</h3>\n      <button>Delete</button> <button>Update title</button>\n      <p>{post.body}</p>\n      <h4>Comments</h4>\n      {data.map((comment) => (\n        <li key={comment.id}>\n          {comment.email}: {comment.body}\n        </li>\n      ))}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}